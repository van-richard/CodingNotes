selector_to_html = {"a[href=\"#simple-md-tutorial-of-alanine-dipeptide\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Simple MD Tutorial of Alanine Dipeptide<a class=\"headerlink\" href=\"#simple-md-tutorial-of-alanine-dipeptide\" title=\"Permalink to this heading\">#</a></h1><p>A simple example of how to run MD simulations is with the molecule, Alanine Dipeptide. We will model the residue, solvate it in a water box, equilibrate the system, and run MD production simulations with AmberTools. This should take roughly an hour.</p>", "a[href=\"#running-the-simulation\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Running the Simulation<a class=\"headerlink\" href=\"#running-the-simulation\" title=\"Permalink to this heading\">#</a></h2><p>Using <code class=\"docutils literal notranslate\"><span class=\"pre\">sander</span></code>, run the following commands in sequential order:</p>", "a[href=\"#prepare-md-inputs-simulation-settings\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Prepare MD Inputs - Simulation Settings<a class=\"headerlink\" href=\"#prepare-md-inputs-simulation-settings\" title=\"Permalink to this heading\">#</a></h2><p>Now, we will make 3 MD input files for running Amber simulations. These files contain the settings for each part of the simulations. The 3 parts involve:</p>", "a[href=\"#prepare-files-folders\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Prepare Files &amp; Folders<a class=\"headerlink\" href=\"#prepare-files-folders\" title=\"Permalink to this heading\">#</a></h2><p>First, set up the directories by creating a folder for \u201cTutorials\u201d, then make a project folder for the \u201csimple\u201d simulation project. <em>Optionally, if you downloaded the reference file, we will move <code class=\"docutils literal notranslate\"><span class=\"pre\">simple.tar.bz2</span></code> into a reference folder.</em></p><p>Create:</p>", "a[href=\"#id1\"]": "<figure class=\"align-default\" id=\"id1\">\n<a class=\"reference internal image-reference\" href=\"../../_images/simple.mov\"><img alt=\"../../_images/simple.mov\" src=\"../../_images/simple.mov\" style=\"width: 50%;\"/></a>\n<figcaption>\n<p><span class=\"caption-number\">Fig. 1 </span><span class=\"caption-text\">MD trajectory of Alanine Dipeptide (<em>shown as ball-and-stick</em>) solvated in water (<em>shown as line</em>) viewed on VMD.</span><a class=\"headerlink\" href=\"#id1\" title=\"Permalink to this image\">#</a></p>\n</figcaption>\n</figure>", "a[href=\"#visualize-trajectory\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Visualize Trajectory<a class=\"headerlink\" href=\"#visualize-trajectory\" title=\"Permalink to this heading\">#</a></h2><p>Now you can visual the results with VMD or Chimera, and perform some analysis.</p>", "a[href=\"#prepare-topology-and-coordinate-files-inputs\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Prepare Topology and Coordinate Files Inputs<a class=\"headerlink\" href=\"#prepare-topology-and-coordinate-files-inputs\" title=\"Permalink to this heading\">#</a></h2><p>Since Alanine dipeptide is still an amino acid, we can use <code class=\"docutils literal notranslate\"><span class=\"pre\">tleap</span></code> to generate the topology (<code class=\"docutils literal notranslate\"><span class=\"pre\">.parm7</span></code>) and coordinate files(<code class=\"docutils literal notranslate\"><span class=\"pre\">.rst7</span></code>). The <code class=\"docutils literal notranslate\"><span class=\"pre\">tleap</span></code> program contains reference coordinates for standard residues to generate  missing atoms, this function is base on the residue name.</p><p>To give <code class=\"docutils literal notranslate\"><span class=\"pre\">tleap</span></code> instructions, make a file called, \u201c<a class=\"reference external\" href=\"http://tleap.in\">tleap.in</a>\u201d using <code class=\"docutils literal notranslate\"><span class=\"pre\">vi</span></code>, and copy the following lines:</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
